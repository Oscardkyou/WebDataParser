Задание по программированию: Разработка алгоритма для парсинга веб-сайтов
Цель задания:
Разработать эффективный алгоритм для автоматического парсинга веб-страниц, который будет собирать, обрабатывать и структурировать данные с указанных сайтов.

Требования:
1. Выбор языка программирования:
Специалист должен использовать один из следующих языков: Python, JavaScript, Ruby или другой по согласованию. Обязательно применение специализированных библиотек и фреймворков для парсинга, таких как Spider, Puppeteer, Playwright и других.
2. Функционал:
Алгоритм должен выполнять следующие задачи:
    * Извлечение данных с указанных сайтов (например, StockX.com или Harrods.com).
    * Работа с карточками товаров и извлечение данных из HTML-структур.
    * Обработка как статических, так и динамических веб-страниц.
    * Очищение, нормализация и структурирование полученных данных в форматах CSV или JSON.
3. Параметры парсинга:
    * Глубинный парсинг по департаментам (например, men, women, kids) и категориям (clothing, shoes, jewellery и т.д.).
    * Настройка целевых элементов для извлечения данных, включая название товара, бренд, размеры, цвет, количество, стоимость, описание и детали.
4. Обработка ошибок:
    * Реализация механизмов обработки исключений на случай недоступности сайта или изменения его структуры.
    * Ведение журнала для записи ошибок и успешных операций парсинга.
5. Многопоточность и асинхронность:
Парсер должен поддерживать многопоточную или асинхронную обработку данных для повышения производительности и скорости при сборе данных с большого числа карточек товаров.
6. Документация:
Весь код должен быть тщательно задокументирован. Необходимо предоставить файл README с подробными инструкциями по установке, настройке и использованию парсера.
7. Срок выполнения:
Необходимо установить четкие сроки выполнения задания с указанием промежуточных контрольных точек для мониторинга прогресса.
8. Дополнительные пожелания:
    * Возможность масштабирования алгоритма для работы с большим количеством сайтов.
    * Оптимизация производительности для эффективной обработки больших объемов данных.

Критерии оценки:
* Качество и читаемость кода.
* Полнота выполнения всех требований.
* Эффективность алгоритма.
* Надежность обработки ошибок и устойчивость к изменениям структуры сайтов.